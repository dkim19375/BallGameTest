plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'org.mikeneck.graalvm-native-image' version 'v1.4.0'
    // id 'com.palantir.graal' version '0.9.0'
}

mainClassName = 'me.dkim19375.tag.TagGameKt'

group 'me.dkim19375'
version '1.0-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

application {
    mainClass.set(mainClassName)
    applicationDefaultJvmArgs = [
            '--illegal-access=warn',
            '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
            '--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED',
            '--add-exports=javafx.base/com.sun.javafx.binding=ALL-UNNAMED',
            '--add-exports=javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED',
            '--add-exports=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED',
            '--add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED',
            '--add-exports=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED',
            '--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED',
    ]
}

javafx {
    version = '15.0.1'
    modules = ['javafx.base', 'javafx.controls', 'javafx.graphics', 'javafx.fxml', 'javafx.media']
}

repositories {
    mavenCentral {
        content {
            excludeGroup 'io.github.dkim19375'
        }
    }
    maven { url = 'https://repo.mattstudios.me/artifactory/public' }
    maven { url = 'https://s01.oss.sonatype.org/content/repositories/releases/' }
    maven { url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    implementation 'no.tornado:tornadofx:1.7.20'
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'io.github.dkim19375:dkimcore:1.1.1'
    implementation 'com.jfoenix:jfoenix:9.0.10'
    implementation('com.github.bkenn:kfoenix:0.1.3') {
        exclude group: 'com.jfoenix', module: 'jfoenix'
    }
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'me.mattstudios:triumph-config:1.0.5-SNAPSHOT'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'com.ToxicBakery.library.bcrypt:bcrypt:+'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
}

/*graal {
    javaVersion 11
}*/

nativeImage {
    graalVmHome = System.getenv 'GRAALVM_HOME'
    classpath = shadowJar
    mainClass = mainClassName
    executableName = 'TagEXE'
    outputDirectory = file "$buildDir/libs/exe"
    //noinspection UnnecessaryQualifiedReference
    buildType { org.mikeneck.graalvm.BuildTypeSelector build ->
        //noinspection GroovyAssignabilityCheck
        build.executable {
            //noinspection GroovyAssignabilityCheck
            main = mainClassName
        }
    }
    arguments {
        add '--allow-incomplete-classpath'
        add '--enable-url-protocols=css'
        add '-H:EnableURLProtocols=css'
        add '-H:+ReportExceptionStackTraces'
    }
}

generateNativeImageConfig {
    enabled = true
}